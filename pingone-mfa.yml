openapi: 3.0.0
info:
  title: PingOne Platform API - PingOne MFA
  description: The PingOne Platform API covering the PingOne MFA service
  version: '2023-01-03'
externalDocs:
  url: https://apidocs.pingidentity.com/pingone/platform/v1/api/#pingone-mfa
  description: PingOne Platform API Reference - PingOne MFA APIs
servers:
  - url: https://api.pingone.{suffix}/{version}
    description: PingOne Platform API Endpoint
    variables:
      suffix:
        enum:
          - 'eu'
          - 'com'
          - 'asia'
          - 'ca'
        default: 'eu'
      version:
        enum:
          - 'v1'
        default: 'v1'
  - url: https://{customEndpoint}
    description: PingOne Platform API Endpoint (when using a custom endpoint)
    variables:
      customEndpoint:
        default: 'api.pingone.eu/v1'
components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: OAuth bearer token (see documentation)
  schemas:
    DeviceAuthenticationPolicyFIDODevice:
      type: object
      properties:
        enabled:
          type: boolean
          description: Enabled or disabled in the policy.
        fidoPolicyId:
          type: string
          description: Specifies the FIDO policy UUID. This property can be null. When null, the environment's default FIDO Policy is used.
      required:
        - enabled
    DeviceAuthenticationPolicyOfflineDevice:
      type: object
      properties:
        enabled:
          type: boolean
          description: Enabled or disabled in the policy.
        otp:
          type: object
          properties:
            lifeTime:
              type: object
              properties:
                duration:
                  type: integer
                  description: The duration (number of time units) that the passcode is valid before it expires.
                timeUnit:
                  $ref: '#/components/schemas/EnumTimeUnit'
              required:
                - duration
                - timeUnit
            failure:
              type: object
              properties:
                count:
                  type: integer
                  description: The maximum number of times that the OTP entry can fail for a user, before they are blocked.
                coolDown:
                  type: object
                  properties:
                    duration:
                      type: integer
                      description: The duration (number of time units) the user is blocked after reaching the maximum number of passcode failures.
                    timeUnit:
                      $ref: '#/components/schemas/EnumTimeUnit'
                  required:
                    - duration
                    - timeUnit
              required:
                - count
                - coolDown
          required:
            - lifeTime
            - failure
      required:
        - enabled
        - otp
    DeviceAuthenticationPolicy:
      type: object
      properties:
        environment:
          $ref: '#/components/schemas/ObjectEnvironment'
        id:
          type: string
          description: Device authentication policy's UUID.
          readOnly: true
        name:
          type: string
          description: Device authentication policy's name.
        sms:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice'
        voice:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice'
        email:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyOfflineDevice'
        mobile:
          type: object
          description: Mobile device authentication policy settings.
          properties:
            enabled:
              type: boolean
              description: Enabled or disabled in the policy.
            otp:
              type: object
              properties:
                failure:
                  type: object
                  properties:
                    count:
                      type: integer
                      description: The maximum number of times that the OTP entry can fail for a user, before they are blocked.
                    coolDown:
                      type: object
                      properties:
                        duration:
                          type: integer
                          description: The duration (number of time units) the user is blocked after reaching the maximum number of passcode failures.
                        timeUnit:
                          $ref: '#/components/schemas/EnumTimeUnit'
                      required:
                        - duration
                        - timeUnit
                  required:
                    - count
                    - coolDown
                window:
                  type: object
                  properties:
                    stepSize:
                      type: object
                      properties:
                        duration:
                          type: integer
                        timeUnit:
                          $ref: '#/components/schemas/EnumTimeUnit'
                      required:
                        - duration
                        - timeUnit
                  required:
                    - stepSize
              required:
                - failure
                - window
            applications:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: The application's ID.
                  push:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                        description: Specifies whether push notification is enabled or disabled for the policy.
                    required:
                      - enabled
                  otp:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                        description: Specifies whether OTP authentication is enabled or disabled for the policy.
                    required:
                      - enabled
                  deviceAuthorization:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                        description: Specifies the enabled or disabled state of automatic MFA for native devices paired with the user, for the specified application.
                      extraVerification:
                        $ref: '#/components/schemas/EnumMFADevicePolicyMobileExtraVerification'
                    required:
                      - enabled
                  autoEnrollment:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                        description: Set to true if you want the application to allow Auto Enrollment. Auto Enrollment means that the user can authenticate for the first time from an unpaired device, and the successful authentication will result in the pairing of the device for MFA.
                    required:
                      - enabled
                  integrityDetection:
                    $ref: '#/components/schemas/EnumMFADevicePolicyMobileIntegrityDetection'
                required:
                  - id
          required:
            - enabled
            - otp
        totp:
          type: object
          description: TOTP device authentication policy settings.
          properties:
            enabled:
              type: boolean
              description: Enabled or disabled in the policy.
            otp:
              type: object
              properties:
                failure:
                  type: object
                  properties:
                    count:
                      type: integer
                      description: The maximum number of times that the OTP entry can fail for a user, before they are blocked.
                    coolDown:
                      type: object
                      properties:
                        duration:
                          type: integer
                          description: The duration (number of time units) the user is blocked after reaching the maximum number of passcode failures.
                        timeUnit:
                          $ref: '#/components/schemas/EnumTimeUnit'
                      required:
                        - duration
                        - timeUnit
                  required:
                    - count
                    - coolDown
              required:
                - failure
          required:
            - enabled
            - otp
        securityKey:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyFIDODevice'
        platform:
          $ref: '#/components/schemas/DeviceAuthenticationPolicyFIDODevice'
        default:
          type: boolean
          description: The default policy for Flow Manager.
        forSignOnPolicy:
          type: boolean
          deprecated: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
          description: The time the resource was last updated.
      required:
        - name
        - sms
        - email
        - voice
        - mobile
        - totp
        - securityKey
        - platform
        - default
        - forSignOnPolicy
    EntityArray:
      type: object
      properties:
        '_embedded':
          type: object
          properties:
            pushCredentials:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/MFAPushCredentialAPNS'
                  - $ref: '#/components/schemas/MFAPushCredentialFCM'
            deviceAuthenticationPolicies:
              type: array
              items:
                $ref: '#/components/schemas/DeviceAuthenticationPolicy'
            fidoDevicesMetadata:
              type: array
              items:
                $ref: '#/components/schemas/FIDODevice'
            fidoPolicies:
              type: array
              items:
                $ref: '#/components/schemas/FIDOPolicy'
        count:
          type: number
        size:
          type: number
    EnumFIDOAttestationRequirements:
      type: string
      enum: [NONE, AUDIT_ONLY, GLOBAL, CERTIFIED, SPECIFIC]
      description:  |
        Determines whether attestation is requested from the authenticator, and whether this information is used to restrict authenticator usage. Can take one of these values:
        `NONE` - attestation is not requested
        `AUDIT_ONLY` - Attestation is requested and the information is used for logging purposes, but the information is not used for filtering authenticators
        `GLOBAL` - all entries in the MDS table can be used for authentication
        `CERTIFIED` - only FIDO-certified authenticators can be used
        `SPECIFIC` - only specific authenticators can be used. Used in conjunction with `allowedAuthenticators`.
    EnumFIDOResidentKeyRequirement:
      type: string
      enum: [DISCOURAGED, REQUIRED]
      description: Used to enable resident keys. Value can be `DISCOURAGED` or `REQUIRED`.
    EnumMFADevicePolicyMobileExtraVerification:
      type: string
      description: Specifies the level of further verification when deviceAuthorization is enabled. The PingOne platform performs an extra verification check by sending a “silent” push notification to the customer native application, and receives a confirmation in return.
      enum: [permissive,restrictive]
    EnumMFADevicePolicyMobileIntegrityDetection:
      type: string
      enum: [permissive, restrictive]
      description: Controls how authentication or registration attempts should proceed if a device integrity check does not receive a response. Set the value to `permissive` if you want to allow the process to continue. Set the value to `restrictive` if you want to block the user in such situations.
    EnumMFAPushCredentialAttrType:
      type: string
      enum: [APNS, FCM]
      description: A string that specifies the type of the push credentials. Mandatory. Valid values APNS, FCM
    EnumMFASettingsDeviceSelection:
      type: string
      enum: [DEFAULT_TO_FIRST, PROMPT_TO_SELECT]
      description: A string that defines the device selection method. Options are DEFAULT_TO_FIRST (this is the default setting) and PROMPT_TO_SELECT.
    EnumMFASettingsPairingKeyFormat:
      type: string
      enum: [NUMERIC, ALPHANUMERIC]
      description: String that controls the type of pairing key issued. The valid values are NUMERIC (12-digit key) and ALPHANUMERIC (16-character alphanumeric key).
    EnumTimeUnit:
      type: string
      enum: [MINUTES, SECONDS]
      description: The type of time unit
    FIDOCustomDeviceMetadata:
      type: object
    FIDODevice:
      type: object
    FIDOPolicy:
      type: object
      properties:
        id:
          type: string
          description: FIDO policy's UUID.
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
          description: The time the resource was created.
        updatedAt:
          type: string
          format: date-time
          readOnly: true
          description: The time the resource was last updated.
        _embedded:
          type: object
        environment:
          $ref: '#/components/schemas/ObjectEnvironment'
        name:
          type: string
          description: The name to use for the FIDO policy.
        description:
          type: string
          description: Description of the FIDO policy.
        attestationRequirements:
          $ref: '#/components/schemas/EnumFIDOAttestationRequirements'
        allowedAuthenticators:
          type: array
          description: If `attestationRequirements` is set to `SPECIFIC`, this array is used to specify the authenticators that you want to allow.
          items:
            type: object
            properties:
              id:
                type: string
                description: The identifier of the authenticator to allow.
            required:
              - id
        enforceDuringAuthentication:
          type: boolean
          description: This parameter is relevant only if you have set `attestationRequirements` to `SPECIFIC` in order to restrict usage to only certain authenticators. If set to `true`, the policy will be applied both during registration and during each authentication attempt. If set to `false`, the policy is applied only during registration. Default is `false`.
          default: false
        default:
          type: boolean
          description: Whether this policy should serve as the default FIDO policy.
        residentKeyRequirement:
          $ref: '#/components/schemas/EnumFIDOResidentKeyRequirement'
      required:
        - name
        - attestationRequirements
        - residentKeyRequirement
    MFAPushCredential:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/EnumMFAPushCredentialAttrType'
        key:
          type: string
          description: A string that Apple uses as an identifier to identify an authentication key.  Mandatory.
      required:
        - type
        - key
    MFAPushCredentialAPNS:
      allOf:
        - $ref: '#/components/schemas/MFAPushCredential'
        - type: object
          properties:
            teamId:
              type: string
              description: A string that Apple uses as an identifier to identify teams.
            token:
              type: string
              description: A string that Apple uses as the authentication token signing key to securely connect to APNS. This is a p8 file with a private key format.
          required:
            - teamId
            - token
    MFAPushCredentialFCM:
      $ref: '#/components/schemas/MFAPushCredential'
    MFAPushCredentialResponse:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          description: A string that specifies the push credential ID.
        type:
          $ref: '#/components/schemas/EnumMFAPushCredentialAttrType'
        createdAt:
          type: string
          format: date-time
          readOnly: true
          description: The time the resource was created.
        updatedAt:
          type: string
          format: date-time
          readOnly: true
          description: The time the resource was last updated.
    MFASettings:
      type: object
      properties:
        environment:
          $ref: '#/components/schemas/ObjectEnvironment'
        authentication:
          type: object
          description: An object that contains the device selection settings.
          properties:
            deviceSelection:
              $ref: '#/components/schemas/EnumMFASettingsDeviceSelection'
          required:
            - deviceSelection
        lockout:
          type: object
          description: An object that contains lockout settings.
          properties:
            failureCount:
              type: integer
              description: An integer that defines the maximum number of incorrect authentication attempts before the account is locked.
            durationSeconds:
              type: integer
              description: An integer that defines the number of seconds to keep the account in a locked state.
          required:
            - failureCount
        pairing:
          type: object
          description: An object that contains pairing settings.
          properties:
            maxAllowedDevices:
              type: integer
              description: An integer that defines the maximum number of MFA devices each user can have. This can be any number up to 15. The default value is 5.
              default: 5
              maximum: 15
            pairingKeyFormat:
              $ref: '#/components/schemas/EnumMFASettingsPairingKeyFormat'
          required:
            - maxAllowedDevices
            - pairingKeyFormat
        updatedAt:
          type: string
          format: date-time
          readOnly: true
          description: The time the resource was last updated.
      required:
        - authentication
        - pairing
    ObjectEnvironment:
      type: object
      readOnly: true
      properties:
        id:
          type: string
          readOnly: true
          description: A string that specifies the environment associated with the object.
    P1Error:
      type: object
      properties: 
        id:
          description: A unique identifier that is stored in log files and always included in an error response. This value can be used to track the error received by the client, with server-side activity included for troubleshooting purposes.
          type: string
        code:
          description: A general fault code which the client must handle to provide all exception handling routines and to localize messages for users. This code is common across all PingOne services and is human readable (such as a defined constant rather than a number).
          type: string
        message:
          description: A short description of the error. This message is intended to assist with debugging and is returned in English only.
          type: string
        details:
          description: Additional details about the error. Optional information to help resolve the error and to display to users.
          type: array
          items:
            type: object
            properties:
              code:
                description: A general fault code which the client must handle to provide all exception handling routines and to localize messages for users. This code is common across all PingOne services and is human readable (such as a defined constant rather than a number).
                type: string
              target:
                description: The item that caused the error (such as a form field ID or an attribute inside a JSON object).
                type: string
              message:
                description: A short description of the error. This message is intended to assist with debugging and is returned in English only.
                type: string
              innerError:
                description: Additional details to help the client developer resolve the fault (primarily for UI validation reasons).
                type: object
                properties:
                  rangeMinimumValue:
                    description: Errors that failed due to range violation. This attribute represents the minimum value of the range.
                    type: integer
                  rangeMaximumValue:
                    description: The maximum range or value of an attribute.
                    type: integer
                  allowedPattern:
                    description: A regex pattern describing an acceptable input pattern.
                    type: string
                  allowedValues:
                    description: A list describing acceptable values.
                    type: array
                    items:
                      type: string
                  maximumValue:
                    description: The maximum value allowed for the request.
                    type: integer
security:
  - bearer: []
tags:
  - name: FIDO Device
  - name: Device Authentication Policy
  - name: FIDO Policy
  - name: MFA Settings
  - name: Users > MFA Devices
  - name: Users > MFA Devices > FIDO2 Biometrics Devices
  - name: Users > Enable Users MFA
  - name: Users > MFA Pairing Keys
paths:
  /environments/{environmentID}/applications/{applicationID}/pushCredentials:
    get:
      tags:
        - Applications > Application MFA Push Credentials
      summary: READ All MFA Push Credentials
      operationId: readAllMFAPushCredentials
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: applicationID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityArray'
    post:
      tags:
        - Applications > Application MFA Push Credentials
      summary: CREATE MFA Push Credential
      operationId: createMFAPushCredential
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/MFAPushCredentialAPNS'
                - $ref: '#/components/schemas/MFAPushCredentialFCM'
              example:
                type: FCM
                key: key.value
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: applicationID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '405':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAPushCredentialResponse'
  /environments/{environmentID}/applications/{applicationID}/pushCredentials/{pushCredentialID}:
    get:
      tags:
        - Applications > Application MFA Push Credentials
      summary: READ One MFA Push Credential
      operationId: readOneMFAPushCredential
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: applicationID
          in: path
          schema:
            type: string
          required: true
        - name: pushCredentialID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAPushCredentialResponse'
    put:
      tags:
        - Applications > Application MFA Push Credentials
      summary: UPDATE MFA Push Credential
      operationId: updateMFAPushCredential
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/MFAPushCredentialAPNS'
                - $ref: '#/components/schemas/MFAPushCredentialFCM'
              example:
                type: APNS
                key: key.value.updated
                teamId: team.id.updated
                token: |-
                  -----BEGIN PRIVATE KEY-----
                  MIGTAgEA****7HUikGZU
                  -----END PRIVATE KEY-----
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: applicationID
          in: path
          schema:
            type: string
          required: true
        - name: pushCredentialID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAPushCredentialResponse'
    delete:
      tags:
        - Applications > Application MFA Push Credentials
      summary: DELETE MFA Push Credential
      operationId: deleteMFAPushCredential
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{accessToken}}
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: applicationID
          in: path
          schema:
            type: string
          required: true
        - name: pushCredentialID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '204':
          description: Successful response
  /environments/{environmentID}/deviceAuthenticationPolicies:
    get:
      tags:
        - Device Authentication Policy
      summary: READ Device Authentication Policies
      operationId: readDeviceAuthenticationPolicies
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityArray'
    post:
      tags:
        - Device Authentication Policy
      summary: CREATE Device Authentication Policy
      operationId: createDeviceAuthenticationPolicies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceAuthenticationPolicy'
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '405':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAuthenticationPolicy'
  /environments/{environmentID}/deviceAuthenticationPolicies/{deviceAuthenticationPolicyID}:
    get:
      tags:
        - Device Authentication Policy
      summary: READ One Device Authentication Policy
      operationId: readOneDeviceAuthenticationPolicy
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: deviceAuthenticationPolicyID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAuthenticationPolicy'
    put:
      tags:
        - Device Authentication Policy
      summary: UPDATE Device Authentication Policy
      operationId: updateDeviceAuthenticationPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceAuthenticationPolicy'
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: deviceAuthenticationPolicyID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAuthenticationPolicy'
    delete:
      tags:
        - Device Authentication Policy
      summary: DELETE Device Authentication Policy
      operationId: deleteDeviceAuthenticationPolicy
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: deviceAuthenticationPolicyID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '204':
          description: Successful response
  /environments/{environmentID}/fidoDevicesMetadata:
    get:
      tags:
        - FIDO Device
      summary: READ All FIDO Devices
      operationId: readFidoDevices
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityArray'
    post:
      tags:
        - FIDO Device
      summary: CREATE FIDO Device
      operationId: createFidoDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FIDOCustomDeviceMetadata'
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '405':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FIDODevice'
  /environments/{environmentID}/fidoDevicesMetadata/{fidoDeviceID}:
    get:
      tags:
        - FIDO Device
      summary: READ One FIDO Device
      operationId: readOneFidoDevice
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: fidoDeviceID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FIDODevice'
    delete:
      tags:
        - FIDO Device
      summary: DELETE FIDO Device
      operationId: deleteFidoDevice
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: fidoDeviceID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '204':
          description: Successful response
  /environments/{environmentID}/fidoPolicies:
    get:
      tags:
        - FIDO Policy
      summary: READ FIDO Policies
      operationId: readFidoPolicies
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityArray'
    post:
      tags:
        - FIDO Policy
      summary: CREATE FIDO Policy
      operationId: createFidoPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FIDOPolicy'
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '405':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FIDOPolicy'
  /environments/{environmentID}/fidoPolicies/{fidoPolicyID}:
    get:
      tags:
        - FIDO Policy
      summary: READ One FIDO Policy
      operationId: readOneFidoPolicy
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: fidoPolicyID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FIDOPolicy'
    put:
      tags:
        - FIDO Policy
      summary: UPDATE FIDO Policy
      operationId: updateFIDOPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FIDOPolicy'
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: fidoPolicyID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FIDOPolicy'
    delete:
      tags:
        - FIDO Policy
      summary: DELETE FIDO Policy
      operationId: deleteFidoPolicy
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: fidoPolicyID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '204':
          description: Successful response
  /environments/{environmentID}/mfaSettings:
    get:
      tags:
        - MFA Settings
      summary: READ MFA Settings
      operationId: readMFASettings
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFASettings'
    put:
      tags:
        - MFA Settings
      summary: UPDATE MFA Settings
      operationId: updateMFASettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFASettings'
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFASettings'
    delete:
      tags:
        - MFA Settings
      summary: RESET MFA Settings
      operationId: resetMFASettings
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '204':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFASettings'
  /environments/{environmentID}/users/{userID}/devices:
    post:
      tags:
        - Users > MFA Devices
      summary: SET Device Order
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                order:
                  - id: '{{deviceID}}'
                  - id: '{{deviceID2}}'
                  - id: '{{deviceID3}}'
                  - id: '{{deviceID4}}'
                  - id: '{{deviceID5}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.pingidentity.devices.reorder+json
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: userID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '405':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Users > MFA Devices
      summary: READ All MFA User Devices
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: userID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Users > MFA Devices
      summary: DELETE Device Order
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.pingidentity.devices.order.remove+json
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: userID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '204':
          description: Successful response
  /environments/{environmentID}/users/{userID}/devices/{deviceID}:
    post:
      tags:
        - Users > MFA Devices
      summary: ACTIVATE MFA User Device
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                otp: xxxxxx
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.pingidentity.device.activate+json
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: userID
          in: path
          schema:
            type: string
          required: true
        - name: deviceID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '405':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Users > MFA Devices
      summary: READ One MFA User Device
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: userID
          in: path
          schema:
            type: string
          required: true
        - name: deviceID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Users > MFA Devices
      summary: DELETE MFA User Device
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: userID
          in: path
          schema:
            type: string
          required: true
        - name: deviceID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '204':
          description: Successful response
  /environments/{environmentID}/users/{userID}/devices/{deviceID}/nickname:
    put:
      tags:
        - Users > MFA Devices
      summary: UPDATE Device Nickname
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                nickname: My phone
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: userID
          in: path
          schema:
            type: string
          required: true
        - name: deviceID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json: {}
  /environments/{environmentID}/users/{userID}/devices/{deviceID}/logs:
    put:
      tags:
        - Users > MFA Devices
      summary: SEND MFA Device Logs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                status: PENDING
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: userID
          in: path
          schema:
            type: string
          required: true
        - name: deviceID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json: {}
  /environments/{environmentID}/users/{userID}/mfaEnabled:
    get:
      tags:
        - Users > Enable Users MFA
      summary: READ User MFA Enabled
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: userID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Users > Enable Users MFA
      summary: UPDATE User MFA Enabled
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                mfaEnabled: true
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: userID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json: {}
  /environments/{environmentID}/users/{userID}/pairingKeys/{pairingKeyID}:
    get:
      tags:
        - Users > MFA Pairing Keys
      summary: READ One MFA Pairing Key
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: userID
          in: path
          schema:
            type: string
          required: true
        - name: pairingKeyID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Users > MFA Pairing Keys
      summary: DELETE MFA Pairing Key
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: userID
          in: path
          schema:
            type: string
          required: true
        - name: pairingKeyID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '204':
          description: Successful response
  /environments/{environmentID}/users/{userID}/pairingKeys:
    post:
      tags:
        - Users > MFA Pairing Keys
      summary: CREATE MFA Pairing Key
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                applications:
                  - id: '{{applicationID}}'
      parameters:
        - name: environmentID
          in: path
          schema:
            type: string
          required: true
        - name: userID
          in: path
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '401':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '403':
          description: Request failed due to authorization issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '405':
          description: Invalid request received.  Malformed JSON, malformed HTTP request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '429':
          description: Request was rate limited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '500':
          description: Uncaught error occurred.  Platform outage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P1Error'
        '201':
          description: Successful response
          content:
            application/json: {}
